{"ast":null,"code":"// Email validation\nexport const isValidEmail = email => {\n  const emailRegex = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n  return emailRegex.test(email);\n};\n\n// Password validation\nexport const isValidPassword = password => {\n  return password && password.length >= 6;\n};\n\n// Password match validation\nexport const doPasswordsMatch = (password, confirmPassword) => {\n  return password === confirmPassword;\n};\n\n// Form field validation\nexport const validateField = (name, value, password) => {\n  switch (name) {\n    case 'name':\n      if (!value.trim()) return 'Name is required';\n      if (value.trim().length < 3) return 'Name must be at least 3 characters';\n      return '';\n    case 'email':\n      if (!value.trim()) return 'Email is required';\n      if (!isValidEmail(value)) return 'Please enter a valid email address';\n      return '';\n    case 'password':\n      if (!value) return 'Password is required';\n      if (!isValidPassword(value)) return 'Password must be at least 6 characters';\n      return '';\n    case 'confirmPassword':\n      if (!value) return 'Please confirm your password';\n      if (!doPasswordsMatch(value, password)) return 'Passwords do not match';\n      return '';\n    default:\n      return '';\n  }\n};\n\n// Login form validation\nexport const validateLoginForm = values => {\n  const errors = {};\n  const emailError = validateField('email', values.email);\n  if (emailError) errors.email = emailError;\n  const passwordError = validateField('password', values.password);\n  if (passwordError) errors.password = passwordError;\n  return errors;\n};\n\n// Signup form validation\nexport const validateSignupForm = values => {\n  const errors = {};\n  const nameError = validateField('name', values.name);\n  if (nameError) errors.name = nameError;\n  const emailError = validateField('email', values.email);\n  if (emailError) errors.email = emailError;\n  const passwordError = validateField('password', values.password);\n  if (passwordError) errors.password = passwordError;\n  const confirmPasswordError = validateField('confirmPassword', values.confirmPassword, values.password);\n  if (confirmPasswordError) errors.confirmPassword = confirmPasswordError;\n  return errors;\n};","map":{"version":3,"names":["isValidEmail","email","emailRegex","test","isValidPassword","password","length","doPasswordsMatch","confirmPassword","validateField","name","value","trim","validateLoginForm","values","errors","emailError","passwordError","validateSignupForm","nameError","confirmPasswordError"],"sources":["C:/Users/TELUGU RENUKA/OneDrive/Desktop/PodPal-Project/frontend/src/utils/validation.js"],"sourcesContent":["// Email validation\r\nexport const isValidEmail = (email) => {\r\n  const emailRegex = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\r\n  return emailRegex.test(email);\r\n};\r\n\r\n// Password validation\r\nexport const isValidPassword = (password) => {\r\n  return password && password.length >= 6;\r\n};\r\n\r\n// Password match validation\r\nexport const doPasswordsMatch = (password, confirmPassword) => {\r\n  return password === confirmPassword;\r\n};\r\n\r\n// Form field validation\r\nexport const validateField = (name, value, password) => {\r\n  switch(name) {\r\n    case 'name':\r\n      if (!value.trim()) return 'Name is required';\r\n      if (value.trim().length < 3) return 'Name must be at least 3 characters';\r\n      return '';\r\n    \r\n    case 'email':\r\n      if (!value.trim()) return 'Email is required';\r\n      if (!isValidEmail(value)) return 'Please enter a valid email address';\r\n      return '';\r\n    \r\n    case 'password':\r\n      if (!value) return 'Password is required';\r\n      if (!isValidPassword(value)) return 'Password must be at least 6 characters';\r\n      return '';\r\n    \r\n    case 'confirmPassword':\r\n      if (!value) return 'Please confirm your password';\r\n      if (!doPasswordsMatch(value, password)) return 'Passwords do not match';\r\n      return '';\r\n    \r\n    default:\r\n      return '';\r\n  }\r\n};\r\n\r\n// Login form validation\r\nexport const validateLoginForm = (values) => {\r\n  const errors = {};\r\n  \r\n  const emailError = validateField('email', values.email);\r\n  if (emailError) errors.email = emailError;\r\n  \r\n  const passwordError = validateField('password', values.password);\r\n  if (passwordError) errors.password = passwordError;\r\n  \r\n  return errors;\r\n};\r\n\r\n// Signup form validation\r\nexport const validateSignupForm = (values) => {\r\n  const errors = {};\r\n  \r\n  const nameError = validateField('name', values.name);\r\n  if (nameError) errors.name = nameError;\r\n  \r\n  const emailError = validateField('email', values.email);\r\n  if (emailError) errors.email = emailError;\r\n  \r\n  const passwordError = validateField('password', values.password);\r\n  if (passwordError) errors.password = passwordError;\r\n  \r\n  const confirmPasswordError = validateField('confirmPassword', values.confirmPassword, values.password);\r\n  if (confirmPasswordError) errors.confirmPassword = confirmPasswordError;\r\n  \r\n  return errors;\r\n}; "],"mappings":"AAAA;AACA,OAAO,MAAMA,YAAY,GAAIC,KAAK,IAAK;EACrC,MAAMC,UAAU,GAAG,uJAAuJ;EAC1K,OAAOA,UAAU,CAACC,IAAI,CAACF,KAAK,CAAC;AAC/B,CAAC;;AAED;AACA,OAAO,MAAMG,eAAe,GAAIC,QAAQ,IAAK;EAC3C,OAAOA,QAAQ,IAAIA,QAAQ,CAACC,MAAM,IAAI,CAAC;AACzC,CAAC;;AAED;AACA,OAAO,MAAMC,gBAAgB,GAAGA,CAACF,QAAQ,EAAEG,eAAe,KAAK;EAC7D,OAAOH,QAAQ,KAAKG,eAAe;AACrC,CAAC;;AAED;AACA,OAAO,MAAMC,aAAa,GAAGA,CAACC,IAAI,EAAEC,KAAK,EAAEN,QAAQ,KAAK;EACtD,QAAOK,IAAI;IACT,KAAK,MAAM;MACT,IAAI,CAACC,KAAK,CAACC,IAAI,CAAC,CAAC,EAAE,OAAO,kBAAkB;MAC5C,IAAID,KAAK,CAACC,IAAI,CAAC,CAAC,CAACN,MAAM,GAAG,CAAC,EAAE,OAAO,oCAAoC;MACxE,OAAO,EAAE;IAEX,KAAK,OAAO;MACV,IAAI,CAACK,KAAK,CAACC,IAAI,CAAC,CAAC,EAAE,OAAO,mBAAmB;MAC7C,IAAI,CAACZ,YAAY,CAACW,KAAK,CAAC,EAAE,OAAO,oCAAoC;MACrE,OAAO,EAAE;IAEX,KAAK,UAAU;MACb,IAAI,CAACA,KAAK,EAAE,OAAO,sBAAsB;MACzC,IAAI,CAACP,eAAe,CAACO,KAAK,CAAC,EAAE,OAAO,wCAAwC;MAC5E,OAAO,EAAE;IAEX,KAAK,iBAAiB;MACpB,IAAI,CAACA,KAAK,EAAE,OAAO,8BAA8B;MACjD,IAAI,CAACJ,gBAAgB,CAACI,KAAK,EAAEN,QAAQ,CAAC,EAAE,OAAO,wBAAwB;MACvE,OAAO,EAAE;IAEX;MACE,OAAO,EAAE;EACb;AACF,CAAC;;AAED;AACA,OAAO,MAAMQ,iBAAiB,GAAIC,MAAM,IAAK;EAC3C,MAAMC,MAAM,GAAG,CAAC,CAAC;EAEjB,MAAMC,UAAU,GAAGP,aAAa,CAAC,OAAO,EAAEK,MAAM,CAACb,KAAK,CAAC;EACvD,IAAIe,UAAU,EAAED,MAAM,CAACd,KAAK,GAAGe,UAAU;EAEzC,MAAMC,aAAa,GAAGR,aAAa,CAAC,UAAU,EAAEK,MAAM,CAACT,QAAQ,CAAC;EAChE,IAAIY,aAAa,EAAEF,MAAM,CAACV,QAAQ,GAAGY,aAAa;EAElD,OAAOF,MAAM;AACf,CAAC;;AAED;AACA,OAAO,MAAMG,kBAAkB,GAAIJ,MAAM,IAAK;EAC5C,MAAMC,MAAM,GAAG,CAAC,CAAC;EAEjB,MAAMI,SAAS,GAAGV,aAAa,CAAC,MAAM,EAAEK,MAAM,CAACJ,IAAI,CAAC;EACpD,IAAIS,SAAS,EAAEJ,MAAM,CAACL,IAAI,GAAGS,SAAS;EAEtC,MAAMH,UAAU,GAAGP,aAAa,CAAC,OAAO,EAAEK,MAAM,CAACb,KAAK,CAAC;EACvD,IAAIe,UAAU,EAAED,MAAM,CAACd,KAAK,GAAGe,UAAU;EAEzC,MAAMC,aAAa,GAAGR,aAAa,CAAC,UAAU,EAAEK,MAAM,CAACT,QAAQ,CAAC;EAChE,IAAIY,aAAa,EAAEF,MAAM,CAACV,QAAQ,GAAGY,aAAa;EAElD,MAAMG,oBAAoB,GAAGX,aAAa,CAAC,iBAAiB,EAAEK,MAAM,CAACN,eAAe,EAAEM,MAAM,CAACT,QAAQ,CAAC;EACtG,IAAIe,oBAAoB,EAAEL,MAAM,CAACP,eAAe,GAAGY,oBAAoB;EAEvE,OAAOL,MAAM;AACf,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}